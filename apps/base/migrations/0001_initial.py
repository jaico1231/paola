# Generated by Django 5.1.7 on 2025-04-26 00:30

import apps.base.models.company
import apps.base.models.users
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ARL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'ARL',
                'verbose_name_plural': 'ARL',
            },
        ),
        migrations.CreateModel(
            name='BloodType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rh', models.CharField(max_length=2)),
                ('abo', models.CharField(max_length=2)),
            ],
            options={
                'verbose_name': 'Grupo Sanguineo',
                'verbose_name_plural': 'Grupos Sanguineos',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Municipio')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ciudad/Municipio',
                'verbose_name_plural': 'Ciudad/Municipios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ComercialCompanyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Contrato',
                'verbose_name_plural': 'Tipos de Contratos',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('iso_name', models.CharField(max_length=50)),
                ('alfa2', models.CharField(max_length=2)),
                ('alfa3', models.CharField(max_length=3)),
                ('code', models.CharField(max_length=3)),
                ('demonym', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'verbose_name': 'Pais',
                'verbose_name_plural': 'Pais',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EPS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'EPS',
                'verbose_name_plural': 'EPS',
            },
        ),
        migrations.CreateModel(
            name='FiscalResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Genero',
                'verbose_name_plural': 'Generos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HousingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Vivienda',
                'verbose_name_plural': 'Tipos de Viviendas',
            },
        ),
        migrations.CreateModel(
            name='IndustryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Trabajo',
                'verbose_name_plural': 'Tipos de Trabajos',
            },
        ),
        migrations.CreateModel(
            name='NoveltyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Permisos',
                'verbose_name_plural': 'Tipos de Permisos',
            },
        ),
        migrations.CreateModel(
            name='PensionFound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Fondo de Pensiones',
                'verbose_name_plural': 'Fondos de Pensiones',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Producto',
                'verbose_name_plural': 'Tipos de Productos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RetirementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Retiro',
                'verbose_name_plural': 'Tipos de Retiros',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SeveranceWithdawalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Retiro de Cesantias',
                'verbose_name_plural': 'Tipo de Retiro de Cesantias',
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaxRegime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('identification_number', models.CharField(max_length=20, unique=True, verbose_name='Número de Identificación')),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.base.models.users.Cargar_imagenes_articulos_path, verbose_name='Imagen de Perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('identification_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='base.doctype', verbose_name='Tipo de Identificación')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tipo de Cuenta',
                'verbose_name_plural': 'Tipos de Cuenta',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AplicationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Aplicación de Estado',
                'verbose_name_plural': 'Aplicaciones de Estado',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AttachmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('allowed_extensions', models.CharField(help_text='Ej: .pdf,.doc,.docx', max_length=200, verbose_name='Extensiones Permitidas')),
                ('max_file_size', models.PositiveIntegerField(default=5, verbose_name='Tamaño Máximo (MB)')),
                ('is_required', models.BooleanField(default=False, verbose_name='Es Requerido')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tipo de Archivo Adjunto',
                'verbose_name_plural': 'Tipos de Archivos Adjuntos',
            },
        ),
        migrations.CreateModel(
            name='CivilStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Estado Civil',
                'verbose_name_plural': 'Estados Civiles',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Nombre de la Empresa')),
                ('tax_id', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='NIT debe contener solo números y guiones', regex='^[0-9-]*$')], verbose_name='NIT')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dirección')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Número de teléfono debe estar en formato: +999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo Electrónico')),
                ('legal_representative', models.CharField(blank=True, max_length=100, null=True, verbose_name='Representante Legal')),
                ('representative_document', models.CharField(blank=True, max_length=20, null=True, verbose_name='Documento del Representante')),
                ('representative_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo del Representante')),
                ('account_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de Cuenta')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=apps.base.models.company.company_logo_path, verbose_name='Logo de la Empresa')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('account_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.accounttype', verbose_name='Tipo de Cuenta')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.city', verbose_name='Ciudad/Municipio')),
                ('comercialcompany', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.comercialcompanytype', verbose_name='Tipo de Empresa')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.country', verbose_name='País')),
                ('document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.doctype', verbose_name='Tipo de Documento')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyFiscalResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.company')),
                ('fiscal_responsibility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.fiscalresponsibility')),
            ],
            options={
                'verbose_name': 'Responsabilidad Fiscal de Empresa',
                'verbose_name_plural': 'Responsabilidades Fiscales de Empresas',
                'unique_together': {('company', 'fiscal_responsibility')},
            },
        ),
        migrations.AddField(
            model_name='company',
            name='fiscal_responsibilities',
            field=models.ManyToManyField(blank=True, related_name='companies', through='base.CompanyFiscalResponsibility', to='base.fiscalresponsibility', verbose_name='Responsabilidades Fiscales'),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre interno del menú', max_length=100, unique=True)),
                ('display_name', models.CharField(blank=True, help_text='Nombre para mostrar en la interfaz', max_length=100)),
                ('icon', models.CharField(default='folder', help_text='Icono Material Design o Font Awesome', max_length=50)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Orden de aparición')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el menú está activo')),
                ('group', models.ManyToManyField(blank=True, help_text='Grupos que pueden ver este menú', to='auth.group')),
            ],
            options={
                'verbose_name': 'Menú',
                'verbose_name_plural': 'Menús',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Metodo de Pago',
                'verbose_name_plural': 'Metodos de Pago',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Periodicity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('days', models.IntegerField(verbose_name='Dias')),
                ('months', models.IntegerField(verbose_name='Meses')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tipo de Periodo',
                'verbose_name_plural': 'Tipos de Periodo',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='company',
            name='payment_periodicity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.periodicity', verbose_name='Periodicidad de Pago'),
        ),
        migrations.CreateModel(
            name='PermitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tipo de Permisos',
                'verbose_name_plural': 'Tipos de Permisos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Estado de Solicitud',
                'verbose_name_plural': 'Estados de Solicitud',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('code', models.CharField(max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.country')),
            ],
            options={
                'verbose_name': 'Departamento/Estado',
                'verbose_name_plural': 'Departamento/Estado',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='company',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.state', verbose_name='Departamento'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.state'),
        ),
        migrations.AddField(
            model_name='company',
            name='tax_regime',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='base.taxregime', verbose_name='Régimen Tributario'),
        ),
        migrations.CreateModel(
            name='ThemeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('css_class', models.CharField(blank=True, max_length=50, verbose_name='Clase CSS')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_default', models.BooleanField(default=False, verbose_name='Por defecto')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tipo de Transacción',
                'verbose_name_plural': 'Tipos de Transacciones',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número de Teléfono')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Dirección')),
                ('type', models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('premium', 'Premium')], default='free', max_length=10)),
                ('inscription_date', models.DateTimeField(auto_now_add=True)),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Zona Horaria')),
                ('receive_notifications', models.BooleanField(default=True, verbose_name='Recibir Notificaciones')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Notificaciones por Correo')),
                ('language', models.CharField(default='es', max_length=10, verbose_name='Idioma')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biografía')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Foto de Perfil')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.city', verbose_name='Ciudad')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.country', verbose_name='País')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.gender', verbose_name='Género')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.state', verbose_name='Estado')),
                ('theme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.themetype', verbose_name='Tema')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('code', models.CharField(help_text='Código único para identificar el tipo de usuario', max_length=50, unique=True, verbose_name='Código')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('level', models.PositiveIntegerField(default=0, help_text='Nivel de jerarquía del tipo de usuario', verbose_name='Nivel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('default_groups', models.ManyToManyField(blank=True, help_text='Grupos que se asignarán automáticamente a este tipo de usuario', to='auth.group', verbose_name='Grupos por Defecto')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Tipo de Usuario',
                'verbose_name_plural': 'Tipos de Usuario',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyAccountingConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('default_iva_rate', models.DecimalField(decimal_places=2, default=19.0, max_digits=5, verbose_name='Tasa IVA Predeterminada (%)')),
                ('apply_ica', models.BooleanField(default=False, verbose_name='Aplica ICA')),
                ('use_fifo', models.BooleanField(default=True, verbose_name='Usar FIFO para inventarios')),
                ('automatic_accounting', models.BooleanField(default=True, help_text='Generar asientos contables automáticamente', verbose_name='Contabilidad Automática')),
                ('accounts_receivable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivable_configs', to='accounting.cuentaauxiliar', verbose_name='Cuentas por Cobrar')),
                ('cash_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cash_configs', to='accounting.cuentaauxiliar', verbose_name='Cuenta de Caja')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='accounting_config', to='base.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('ica_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ica_configs', to='accounting.cuentaauxiliar', verbose_name='Cuenta de ICA')),
                ('iva_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='iva_configs', to='accounting.cuentaauxiliar', verbose_name='Cuenta de IVA')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('sales_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_configs', to='accounting.cuentaauxiliar', verbose_name='Cuenta de Ingresos')),
                ('withholding_tax_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='withholding_configs', to='accounting.cuentaauxiliar', verbose_name='Cuenta de Retención')),
            ],
            options={
                'verbose_name': 'Configuración Contable',
                'verbose_name_plural': 'Configuraciones Contables',
                'indexes': [models.Index(fields=['company'], name='base_compan_company_920a60_idx')],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del elemento de menú', max_length=100)),
                ('url_name', models.CharField(help_text='Nombre de URL para enlace', max_length=100)),
                ('icon', models.CharField(blank=True, help_text='Icono Material Design o Font Awesome', max_length=50)),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Orden de aparición')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el elemento está activo')),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupos que pueden ver este elemento', to='auth.group')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='base.menu')),
                ('parent', models.ForeignKey(blank=True, help_text='Elemento padre (para submenús)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='base.menuitem')),
            ],
            options={
                'verbose_name': 'Elemento de menú',
                'verbose_name_plural': 'Elementos de menú',
                'ordering': ['menu', 'order', 'name'],
                'unique_together': {('menu', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='base_compan_name_1d79ae_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['tax_id'], name='base_compan_tax_id_4839e0_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['is_active'], name='base_compan_is_acti_997264_idx'),
        ),
    ]
