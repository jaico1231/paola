# Generated by Django 5.1.7 on 2025-04-26 00:30

import django.db.models.deletion
import django_cryptography.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MessageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('message_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('WHATSAPP', 'WhatsApp')], max_length=10, verbose_name='Message Type')),
                ('sender', models.CharField(help_text='Email address or phone number of sender', max_length=255, verbose_name='Sender')),
                ('recipient', models.CharField(help_text='Email address or phone number of recipient', max_length=255, verbose_name='Recipient')),
                ('cc', models.TextField(blank=True, help_text='Comma-separated list of CC recipients (for emails)', null=True, verbose_name='CC Recipients')),
                ('subject', models.CharField(blank=True, help_text='Email subject or message title', max_length=255, null=True, verbose_name='Subject')),
                ('message', models.TextField(help_text='Content of the message', verbose_name='Message Content')),
                ('template_name', models.CharField(blank=True, help_text='Name of template used, if any', max_length=255, null=True, verbose_name='Template Name')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed')], default='PENDING', max_length=10, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent Time')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivery Time')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read Time')),
                ('provider', models.CharField(blank=True, help_text='Service provider used (Twilio, SendGrid, etc.)', max_length=50, null=True, verbose_name='Provider')),
                ('provider_message_id', models.CharField(blank=True, help_text='Message ID returned by the provider', max_length=255, null=True, verbose_name='Provider Message ID')),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed', null=True, verbose_name='Error Message')),
                ('retries', models.PositiveSmallIntegerField(default=0, verbose_name='Retry Count')),
                ('metadata', models.JSONField(blank=True, help_text='Any additional data related to the message', null=True, verbose_name='Additional Metadata')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Message Log',
                'verbose_name_plural': 'Message Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('template_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('WHATSAPP', 'WhatsApp')], max_length=10, verbose_name='Template Type')),
                ('subject', models.CharField(blank=True, help_text='Subject line for email templates', max_length=255, null=True, verbose_name='Subject')),
                ('content', models.TextField(help_text='Template content with variable placeholders', verbose_name='Template Content')),
                ('html_content', models.TextField(blank=True, help_text='HTML version for email templates', null=True, verbose_name='HTML Content')),
                ('default_context', models.JSONField(blank=True, help_text='Default values for template variables', null=True, verbose_name='Default Context')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Message Template',
                'verbose_name_plural': 'Message Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('scheduled_time', models.DateTimeField(help_text='When the message should be sent', verbose_name='Scheduled Time')),
                ('recurring', models.BooleanField(default=False, verbose_name='Recurring Message')),
                ('recurrence_pattern', models.JSONField(blank=True, help_text='JSON defining recurrence rules', null=True, verbose_name='Recurrence Pattern')),
                ('processed', models.BooleanField(default=False, help_text='Whether this scheduled message has been processed', verbose_name='Processed')),
                ('canceled', models.BooleanField(default=False, verbose_name='Canceled')),
                ('last_run', models.DateTimeField(blank=True, null=True, verbose_name='Last Run Time')),
                ('next_run', models.DateTimeField(blank=True, null=True, verbose_name='Next Run Time')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('message_log', models.OneToOneField(help_text='Associated message log entry', on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='notifications.messagelog')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Scheduled Message',
                'verbose_name_plural': 'Scheduled Messages',
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='SMSConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(help_text='Descriptive name for this configuration', max_length=100, unique=True, verbose_name='Configuration Name')),
                ('backend', models.CharField(choices=[('TWILIO', 'Twilio'), ('AWS_SNS', 'AWS SNS'), ('PLIVO', 'Plivo'), ('NEXMO', 'Vonage (Nexmo)'), ('DEBUG', 'Debug Console')], default='TWILIO', max_length=20, verbose_name='SMS Backend')),
                ('account_sid', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True, verbose_name='Account SID/Key'))),
                ('auth_token', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True, verbose_name='Auth Token'))),
                ('phone_number', models.CharField(help_text='In international format (+1234567890)', max_length=20, verbose_name='Sender Phone Number')),
                ('api_key', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True, verbose_name='API Key'))),
                ('region', models.CharField(blank=True, help_text='Only for AWS SNS (e.g., us-east-1)', max_length=50, null=True, verbose_name='AWS Region')),
                ('timeout', models.PositiveIntegerField(default=10, help_text='Timeout in seconds for API requests', verbose_name='Connection Timeout')),
                ('is_active', models.BooleanField(default=False, help_text='Only one SMS configuration can be active', verbose_name='Active Configuration')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'SMS Configuration',
                'verbose_name_plural': 'SMS Configurations',
            },
        ),
        migrations.CreateModel(
            name='WhatsAppConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Configuration Name')),
                ('backend', models.CharField(choices=[('TWILIO', 'Twilio'), ('META', 'Meta Business'), ('DEBUG', 'Debug Console')], default='TWILIO', max_length=20, verbose_name='WhatsApp Backend')),
                ('account_sid', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True, verbose_name='Account SID'))),
                ('auth_token', django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=255, null=True, verbose_name='Auth Token'))),
                ('whatsapp_number', models.CharField(help_text='In international format (+1234567890)', max_length=20, verbose_name='WhatsApp Business Number')),
                ('business_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business ID')),
                ('api_version', models.CharField(default='v1', help_text='Meta API version (e.g., v15.0)', max_length=10, verbose_name='API Version')),
                ('timeout', models.PositiveIntegerField(default=15, verbose_name='Connection Timeout')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active Configuration')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'WhatsApp Configuration',
                'verbose_name_plural': 'WhatsApp Configurations',
            },
        ),
        migrations.CreateModel(
            name='EmailConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('name', models.CharField(help_text='Descriptive name for this configuration', max_length=100, unique=True, verbose_name='Configuration Name')),
                ('backend', models.CharField(choices=[('SMTP', 'SMTP Standard'), ('SENDGRID', 'SendGrid API'), ('SES', 'Amazon SES'), ('console', 'Console Debug'), ('file', 'File Debug')], default='SMTP', max_length=20, verbose_name='Email Backend')),
                ('host', models.CharField(blank=True, max_length=255, null=True, verbose_name='Server Host')),
                ('port', models.PositiveIntegerField(blank=True, help_text='Default ports: SMTP (25, 587), SSL (465), SendGrid (443)', null=True, verbose_name='Port Number')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Authentication Username')),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('api_key', models.CharField(blank=True, help_text='For API-based services like SendGrid', max_length=255, null=True)),
                ('security_protocol', models.CharField(choices=[('none', 'None'), ('TLS', 'TLS'), ('SSL', 'SSL'), ('STARTTLS', 'STARTTLS')], default='TLS', max_length=20, verbose_name='Security Protocol')),
                ('timeout', models.PositiveIntegerField(default=10, help_text='Timeout in seconds for connection attempts', verbose_name='Connection Timeout')),
                ('from_email', models.EmailField(help_text="Format: 'Name <email@example.com>'", max_length=255, verbose_name='Default From Address')),
                ('is_active', models.BooleanField(default=False, help_text='Only one configuration can be active at a time', verbose_name='Active Configuration')),
                ('use_custom_headers', models.BooleanField(default=False, verbose_name='Use Custom Headers')),
                ('custom_headers', models.JSONField(blank=True, help_text='JSON format for additional headers', null=True, verbose_name='Custom Email Headers')),
                ('fail_silently', models.BooleanField(default=False, help_text='Set to True to suppress exceptions', verbose_name='Fail Silently')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Email Configuration',
                'verbose_name_plural': 'Email Configurations',
                'ordering': ['-is_active', 'name'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('is_active',), name='unique_active_configuration')],
            },
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['message_type', 'status'], name='notificatio_message_19286f_idx'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['recipient'], name='notificatio_recipie_6e8248_idx'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_4f693f_idx'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['provider_message_id'], name='notificatio_provide_8612da_idx'),
        ),
        migrations.AddIndex(
            model_name='messagetemplate',
            index=models.Index(fields=['template_type'], name='notificatio_templat_10a116_idx'),
        ),
        migrations.AddIndex(
            model_name='messagetemplate',
            index=models.Index(fields=['is_active'], name='notificatio_is_acti_2cf9bf_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledmessage',
            index=models.Index(fields=['scheduled_time'], name='notificatio_schedul_841a67_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledmessage',
            index=models.Index(fields=['processed'], name='notificatio_process_a02405_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledmessage',
            index=models.Index(fields=['recurring'], name='notificatio_recurri_7646c0_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledmessage',
            index=models.Index(fields=['next_run'], name='notificatio_next_ru_4167a2_idx'),
        ),
        migrations.AddConstraint(
            model_name='smsconfiguration',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('is_active',), name='unique_active_sms_config'),
        ),
        migrations.AddConstraint(
            model_name='whatsappconfiguration',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('is_active',), name='unique_active_whatsapp_config'),
        ),
    ]
